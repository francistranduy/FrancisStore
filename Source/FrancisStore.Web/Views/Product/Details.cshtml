@model FrancisStore.Web.Models.ProductDetailsViewModel

<!-- Breadcrumb -->
@{Html.Partial("_BreadCrumb");}

<!-- Product Detail -->
<div class="container bgwhite p-t-35 p-b-80">
    <div class="flex-w flex-sb">
        <div class="w-size13 p-t-30 respon5">
            <div class="wrap-slick3 flex-sb flex-w">
                <div class="wrap-slick3-dots"></div>
                <div class="slick3">
                    @foreach (var image in Model.Images)
                    {
                        <div class="item-slick3" data-thumb="@image">
                            <div class="wrap-pic-w">
                                <img src="@image" alt="IMG-PRODUCT">
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="w-size14 p-t-30 respon5">
            <h4 class="product-detail-name m-text16 p-b-13">
                @Model.Name
            </h4>

            <span class="m-text17" id="product-price">Not available</span>

            <p class="s-text8 p-t-10">
                @Model.Note
            </p>

            @Html.Hidden("Id")

            <!-- Basic Information -->
            <div class="p-t-33 p-b-60">

                @using (Html.BeginForm("GetVariantByProductIdAndOptions", "Product", FormMethod.Post, new { @class = "form-horizontal", id = "product-properties", role = "form" }))
                {
                    foreach (var property in Model.Properties)
                    {
                        <div class="flex-m flex-w p-b-10">
                            <div class="s-text15 w-size15 t-center">
                                @property
                            </div>

                            <div class="rs2-select2 rs3-select2 bo4 of-hidden w-size16">
                                <select class="selection-2 product-property" name="@property">
                                    <option value="">Choose an option</option>
                                    @foreach (var value in Model.Options[property])
                                    {
                                        <option value="@value">@value</option>
                                    }
                                </select>
                            </div>
                        </div>
                    }
                }

                <div class="flex-r-m flex-w p-t-10">
                    <div class="w-size16 flex-m flex-w">
                        <div class="flex-w bo5 of-hidden m-r-22 m-t-10 m-b-10">
                            <button class="btn-num-product-down color1 flex-c-m size7 bg8 eff2">
                                <i class="fs-12 fa fa-minus" aria-hidden="true"></i>
                            </button>

                            <input class="size8 m-text18 t-center num-product" type="number" name="Quantity" value="1">

                            <button class="btn-num-product-up color1 flex-c-m size7 bg8 eff2">
                                <i class="fs-12 fa fa-plus" aria-hidden="true"></i>
                            </button>
                        </div>

                        <input type="hidden" name="Variant" id="variant-id">
                        <div class="btn-addcart-product-detail size9 trans-0-4 m-t-10 m-b-10">
                            <!-- Button -->
                            <input type="button" class="flex-c-m sizefull bg8 bo-rad-23 hov1 s-text1 trans-0-4" id="btn-addcart" disabled value="Add to Cart" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="p-b-45">
                <span class="s-text8">SKU: </span><span class="s-text8 m-r-35" id="variant-sku">Not available</span>
                <span class="s-text8">Categories: Mug, Design</span>
            </div>

            <!-- Description -->
            <div class="wrap-dropdown-content bo6 p-t-15 p-b-14 active-dropdown-content">
                <h5 class="js-toggle-dropdown-content flex-sb-m cs-pointer m-text19 color0-hov trans-0-4">
                    Description
                    <i class="down-mark fs-12 color1 fa fa-minus dis-none" aria-hidden="true"></i>
                    <i class="up-mark fs-12 color1 fa fa-plus" aria-hidden="true"></i>
                </h5>

                <div class="dropdown-content dis-none p-t-15 p-b-23">
                    <p class="s-text8">
                        @Model.Description
                    </p>
                </div>
            </div>

            <div class="wrap-dropdown-content bo7 p-t-15 p-b-14">
                <h5 class="js-toggle-dropdown-content flex-sb-m cs-pointer m-text19 color0-hov trans-0-4">
                    Additional information
                    <i class="down-mark fs-12 color1 fa fa-minus dis-none" aria-hidden="true"></i>
                    <i class="up-mark fs-12 color1 fa fa-plus" aria-hidden="true"></i>
                </h5>

                <div class="dropdown-content dis-none p-t-15 p-b-23">
                    <p class="s-text8">
                        @Model.AdditionalInformation
                    </p>
                </div>
            </div>

            <div class="wrap-dropdown-content bo7 p-t-15 p-b-14">
                <h5 class="js-toggle-dropdown-content flex-sb-m cs-pointer m-text19 color0-hov trans-0-4">
                    Reviews (0)
                    <i class="down-mark fs-12 color1 fa fa-minus dis-none" aria-hidden="true"></i>
                    <i class="up-mark fs-12 color1 fa fa-plus" aria-hidden="true"></i>
                </h5>

                <div class="dropdown-content dis-none p-t-15 p-b-23">
                    <p class="s-text8">
                        Fusce ornare mi vel risus porttitor dignissim. Nunc eget risus at ipsum blandit ornare vel sed velit. Proin gravida arcu nisl, a dignissim mauris placerat
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Relate Product -->
@if (Model.RelatedProduct != null)
{
    Html.RenderPartial("_RelatedProduct", Model.RelatedProduct);
}

@section DropdownSelection
{
    <div id="PropertySelections"></div>
}

@section Scripts
{
    <script type="text/javascript" src="~/lib/slick-carousel/slick.min.js"></script>
    <script type="text/javascript" src="~/lib/sweetalert/sweetalert.min.js"></script>
    <script type="text/javascript" src="~/Scripts/slick-custom.js"></script>
    <script type="text/javascript">
        //Product Property Selections
        $(".selection-2").select2({
            minimumResultsForSearch: 20,
            dropdownParent: $('#PropertySelections')
        });

        //Add to card modal
        $('.block2-btn-addcart').each(function () {
            var nameProduct = $(this).parent().parent().parent().find('.block2-name').html();
            $(this).on('click', function () {
                swal(nameProduct, "is added to cart !", "success");
            });
        });

        //Add to whishlist modal
        $('.block2-btn-addwishlist').each(function () {
            var nameProduct = $(this).parent().parent().parent().find('.block2-name').html();
            $(this).on('click', function () {
                swal(nameProduct, "is added to wishlist !", "success");
            });
        });

        //Add to cart modal in product detail
        $('.btn-addcart-product-detail').each(function () {
            var nameProduct = $('.product-detail-name').html();
            $(this).on('click', function () {
                swal(nameProduct, "is added to wishlist !", "success");
            });
        });

        //Select product property
        $('.product-property').each(function () {
            $(this).change('click', function () {
                var options = $("#product-properties").serializeDictionary();
                var id = $("#Id").val()
                var data = { Options: options, Id: id }
                var url = $("#product-properties").attr("action");
                $.ajax({
                    url: url,
                    type: "POST",
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    complete: function (jqXHR, textStatus) {
                        if (jqXHR.status == 200) {

                            if (jqXHR.responseText && jqXHR.responseText.length > 0) {
                                var variant = JSON.parse(jqXHR.responseText);
                                $("#btn-addcart").removeAttr("disabled");
                                $("#btn-addcart").removeClass("bg8");
                                $("#variant-id").val(variant.Id);
                                $("#btn-addcart").addClass("bg1");
                                $("#variant-sku").html(variant.SKU);
                                $("#product-price").html("$" + variant.Price);
                                alert(jqXHR.responseText);
                            }
                            return;
                        }

                        if (jqXHR.status == 404) {
                            $("#btn-addcart").attr("disabled", "disabled");
                            $("#btn-addcart").addClass("bg8");
                            $("#variant-id").val('');
                            $("#btn-addcart").removeClass("bg1");
                            $("#variant-sku").html("Not available");
                            $("#product-price").html("Not available");
                            return;
                        }

                        console.log("An error occurred!");
                    }
                });
            });
        });
    </script>
}